{"version":3,"file":"static/js/566.b0c272a2.chunk.js","mappings":"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","sources":["components/Modal/ModalWindow.styled.jsx","components/Modal/ModalWindow.jsx","components/Main/Main.jsx","components/Main/Main.styled.js","components/Main/backGround.styled.js","pages/HomePage/HomePage.js"],"sourcesContent":["import { Box } from '@mui/material';\nimport styled from 'styled-components';\nexport const StyledItem = styled.li`\n  margin-bottom: 14px;\n  & span,\n  ::marker {\n    color: #9b9faa;\n    font-family: 'Verdana';\n    font-size: 14px;\n    line-height: 1.2;\n    margin-right: 2px;\n  }\n`;\nexport const BoxStyled = styled(Box)`\n  position: absolute;\n  top: 14.4%;\n  width: 100vw;\n  max-height: 656px;\n  padding: 40px 20px 119px;\n\n  @media screen and (min-width: 768px) {\n    width: 672px;\n    height: 572px;\n    padding: 64px 154px;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n  }\n  @media screen and (min-width: 1280px) {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n\n  background-color: white;\n`;\n","import Modal from '@mui/material/Modal';\nimport {\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport { BoxStyled } from './ModalWindow.styled';\nimport { postDailyRate } from 'services/api/base_api';\nimport { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectAuthIsLoggedIn } from 'redux/auth/authSelectors';\nimport { ColorButton } from '../Main/Main.styled';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport KeyboardReturnIcon from '@mui/icons-material/KeyboardReturn';\nimport { Box } from '@mui/system';\nimport { arrayRandElement } from 'components/RightSideBar/RightSideBar';\nimport Filter from './Filter';\nimport LoadingSpiner from '../AuthForm/LoadingSpiner/LoadingSpiner';\nimport { useTheme } from '@mui/material/styles';\nimport { ListStyled } from 'components/Dairy/DairyProductList/DairyProductList.styled';\nconst ModalWindow = ({ values, open, onClose, setOpen }) => {\n  const [data, setData] = useState({});\n  const isLoggedIn = useSelector(selectAuthIsLoggedIn);\n  const fobidenPropucts = data.notAllowedProducts;\n  const [loading, setLoading] = useState(false);\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const filterData = (query, fobidenPropucts) => {\n    if (!query) {\n      return fobidenPropucts;\n    } else {\n      return fobidenPropucts.filter(d =>\n        d.toLowerCase().includes(query.trim())\n      );\n    }\n  };\n\n  const dataFiltered = filterData(searchQuery, fobidenPropucts);\n\n  Object.keys(values).forEach((key, index) => {\n    if (typeof values[key] === 'string') values[key] = Number(values[key]);\n  });\n\n  useEffect(() => {\n    setLoading(true);\n\n    postDailyRate(values)\n      .then(res => setData(res))\n      .finally(() => setLoading(false));\n  }, [values]);\n\n  const handleCloseBtn = () => setOpen(!open);\n\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('md'));\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        hideBackdrop={mobile ? true : false}\n      >\n        <BoxStyled>\n          <IconButton\n            onClick={handleCloseBtn}\n            sx={{\n              position: 'absolute',\n              top: 20,\n              right: 20,\n              display: { xs: 'none', md: 'block' },\n            }}\n          >\n            <ClearIcon />\n          </IconButton>\n\n          <Box\n            component=\"div\"\n            sx={{\n              backgroundColor: '#E0E0E0',\n              width: '100vw',\n              hight: '40px',\n              position: 'absolute',\n              zIndex: 2,\n              top: '-39px',\n              left: 0,\n              display: { xs: 'block', md: 'none' },\n            }}\n          >\n            <IconButton onClick={handleCloseBtn} sx={{ ml: '20px' }}>\n              <KeyboardReturnIcon />\n            </IconButton>\n          </Box>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h2\"\n            component=\"span\"\n            sx={{\n              m: { xs: '20px auto 42px auto', md: '24px auto 20px auto' },\n              textAlign: { xs: 'start', md: 'center' },\n              fontSize: { xs: '18px', md: '36px' },\n              maxWidth: { xs: '280px', md: '508px' },\n              lineHeight: '1.4',\n            }}\n          >\n            Your recommended daily calorie intake is\n          </Typography>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h3\"\n            component=\"p\"\n            sx={{\n              mb: '30px',\n            }}\n          >\n            {loading ? (\n              <LoadingSpiner color=\"#264061\" />\n            ) : (\n              Math.ceil(data.dailyRate, 1) + ' kcal'\n            )}\n          </Typography>\n          <Divider\n            variant=\"middle\"\n            sx={{\n              maxWidth: '280px',\n              m: '0 auto',\n            }}\n          />\n          <Box\n            component=\"div\"\n            sx={{\n              // maxWidth: '380px',\n              m: '0 auto',\n            }}\n          >\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h4\"\n              component=\"h4\"\n              sx={{\n                m: { xs: '20px auto', md: '12px auto 20px auto' },\n                textAlign: 'center',\n              }}\n            >\n              Food you should not eat\n            </Typography>\n            <Filter searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n            <ListStyled\n              sx={{\n                height: '140px',\n                m: '0 auto 30px',\n                '& .MuiListItem-root': {\n                  padding: 0,\n                },\n                '&.MuiList-root': {\n                  marginTop: '15px',\n                  width: { xs: '78vw', md: '370px' },\n                },\n              }}\n            >\n              {dataFiltered?.map(product => (\n                <ListItem disableGutters key={product}>\n                  <ListItemText\n                    primary={\n                      product\n                        ? product\n                        : `${arrayRandElement(fobidenPropucts) || ''}`\n                    }\n                  />\n                </ListItem>\n              ))}\n            </ListStyled>\n          </Box>\n          <Link\n            component=\"button\"\n            style={{\n              margin: '0 auto',\n              textDecoration: 'none',\n            }}\n            to={isLoggedIn ? '/diary' : '/registration'}\n            onClick={onClose}\n          >\n            <ColorButton\n              sx={{\n                m: '0 auto',\n              }}\n            >\n              Start losing weight\n            </ColorButton>\n          </Link>\n        </BoxStyled>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalWindow;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport {\n  ColorButton,\n  ColorRadioBtn,\n  StyledInputLable,\n  StyledFormControlLabel,\n} from './Main.styled.js';\n\nimport RadioGroup, { useRadioGroup } from '@mui/material/RadioGroup';\nimport { FormHelperText, Input, Typography, Box } from '@mui/material';\nimport ModalWindow from 'components/Modal/ModalWindow.jsx';\nimport {\n  selectAuthIsLoggedIn,\n  selectAuthUserData,\n  selectAuthUserId,\n} from 'redux/auth/authSelectors.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dailyRateOperation } from 'redux/daily/dailyOperation.js';\n\nconst schema = yup.object().shape({\n  height: yup\n    .number()\n    .required('Please write down your your height')\n    .typeError('Your height must be a number!')\n    .positive('Height mast be a positive number')\n    .min(110, 'You cant be that short!')\n    .integer('Your height must be an integer!')\n    .max(230, 'You cant be that big!'),\n\n  age: yup\n    .number()\n    .required('Please write down your your age')\n    .typeError('Your age must be a number!')\n    .positive('Age mast be a positive number')\n    .min(15, 'Aplication is not for children')\n    .integer('Your age must be an integer!')\n    .max(80, 'Better check your weight with a doctor'),\n\n  weight: yup\n    .number()\n    .required('Please write down your current weight')\n    .typeError('Your current weight must be a number!')\n    .positive('Weight mast be a positive number')\n    .min(50, 'You are too light to use this app.')\n    .integer('Your weight must be an integer!')\n    .max(350, 'You cant be that big!'),\n\n  desiredWeight: yup\n    .number()\n    .required('Please write down your desired weight')\n    .typeError('Your desired weight must be a number!')\n    .positive('Desired weight mast be a positive')\n    .min(45, 'You cant be that light.')\n    .integer('Your desired weight must be an integer!')\n    .max(120, 'You can do better!')\n    .notOneOf(\n      [yup.ref('weight'), null],\n      'Your desired weight and current weight are same!'\n    ),\n\n  bloodType: yup.number().required('Please chose your blood type'),\n});\n\nfunction MyFormControlLabel(props) {\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n}\n\nMyFormControlLabel.propTypes = {\n  value: PropTypes.string,\n};\n\nconst Home = ({ onSubmit }) => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const userInitValues = useSelector(selectAuthUserData);\n  const localInitValues = JSON.parse(localStorage?.getItem('item'));\n  const initialValues = {\n    height: userInitValues?.height || localInitValues?.height || '',\n    age: userInitValues?.age || localInitValues?.age || '',\n    weight: userInitValues?.weight || localInitValues?.weight || '',\n    desiredWeight:\n      userInitValues?.desiredWeight || localInitValues?.desiredWeight || '',\n    bloodType: userInitValues?.bloodType || localInitValues?.bloodType || '',\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: schema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(true);\n      localStorage.setItem('item', JSON.stringify(values));\n      setSubmitting(false);\n    },\n    validateOnBlur: true,\n  });\n\n  const isValid = schema.isValidSync(formik.values);\n  const handleCloseModal = () => {\n    setOpen(!open);\n  };\n  const isLoggedIn = useSelector(selectAuthIsLoggedIn);\n  const id = useSelector(selectAuthUserId);\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        p: {\n          xs: '32px 0 41px 0',\n          md: '100px 0 48px 0',\n          lg: '293px 0 111px 0 ',\n        },\n        mr: {\n          lg: '139px',\n        },\n      }}\n    >\n      <Box\n        component=\"div\"\n        sx={{\n          maxWidth: { lg: '608px', md: '518px', xs: '280px' },\n\n          m: {\n            xs: '0 auto',\n            lg: '0',\n          },\n        }}\n      >\n        <Typography\n          variant=\"h2\"\n          component=\"h1\"\n          sx={{\n            mb: { xs: '34px', md: '68px' },\n            textAlign: { xs: 'center', md: 'start' },\n            fontSize: { xs: '18px', md: '34px' },\n          }}\n        >\n          Calculate your daily calorie intake right now\n        </Typography>\n        <Box\n          component=\"form\"\n          sx={{\n            m: { xs: '0 auto', md: '0 auto 0 0' },\n            maxWidth: { md: '512px', xs: '240px' },\n          }}\n          autoComplete=\"off\"\n          onSubmit={formik.handleSubmit}\n        >\n          <Box\n            component=\"div\"\n            sx={{\n              display: { md: 'flex' },\n              gap: '32px',\n            }}\n          >\n            <Box component=\"div\">\n              <StyledInputLable\n                htmlFor=\"height\"\n                disableAnimation\n                shrink\n                error={formik.touched.height && Boolean(formik.errors.height)}\n              >\n                Height*\n              </StyledInputLable>\n              <Input\n                notched=\"true\"\n                id=\"height\"\n                placeholder=\"Write down your height in sm.\"\n                value={formik.values.height}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.height && Boolean(formik.errors.height)}\n                sx={{ width: '242px' }}\n              />\n              {formik.touched.height && formik.errors.height ? (\n                <FormHelperText\n                  error={formik.touched.height && Boolean(formik.errors.height)}\n                  id=\"height-helper-text\"\n                >\n                  {formik.errors.height}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"height-helper-text\"> </FormHelperText>\n              )}\n\n              <StyledInputLable\n                htmlFor=\"age\"\n                disableAnimation\n                shrink\n                error={formik.touched.age && Boolean(formik.errors.age)}\n                sx={{ mt: { xs: '12px', md: '20px' } }}\n              >\n                Age*\n              </StyledInputLable>\n              <Input\n                notched=\"true\"\n                id=\"age\"\n                value={formik.values.age}\n                placeholder=\"Write down your age.\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.age && Boolean(formik.errors.age)}\n                variant=\"standard\"\n                sx={{ width: '240px' }}\n              />\n              {formik.touched.age && formik.errors.age ? (\n                <FormHelperText\n                  error={formik.touched.age && Boolean(formik.errors.age)}\n                  id=\"age-helper-text\"\n                >\n                  {formik.errors.age}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"age-helper-text\"> </FormHelperText>\n              )}\n\n              <StyledInputLable\n                error={formik.touched.weight && Boolean(formik.errors.weight)}\n                disableAnimation\n                shrink\n                htmlFor=\"weight\"\n                sx={{ mt: { xs: '12px', md: '20px' } }}\n              >\n                Current Weight*\n              </StyledInputLable>\n              <Input\n                notched=\"true\"\n                id=\"weight\"\n                placeholder=\"Write down your weight in kg.\"\n                aria-describedby=\"weight-helper-text\"\n                value={formik.values.weight}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.weight && Boolean(formik.errors.weight)}\n                sx={{ width: '240px' }}\n              />\n              {formik.touched.weight && formik.errors.weight ? (\n                <FormHelperText\n                  error={formik.touched.weight && Boolean(formik.errors.weight)}\n                  id=\"weight-helper-text\"\n                >\n                  {formik.errors.weight}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"weight-helper-text\"> </FormHelperText>\n              )}\n            </Box>\n            <Box component=\"div\">\n              <StyledInputLable\n                error={\n                  formik.touched.desiredWeight &&\n                  Boolean(formik.errors.desiredWeight)\n                }\n                sx={{ mt: { xs: '12px', md: '0' } }}\n                disableAnimation\n                shrink\n                htmlFor=\"desiredWeight\"\n              >\n                Desired Weight*\n              </StyledInputLable>\n              <Input\n                notched=\"true\"\n                id=\"desiredWeight\"\n                placeholder=\"Your desired weight in kg.\"\n                value={formik.values.desiredWeight}\n                aria-describedby=\"desiredWeight-helper-text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                  formik.touched.desiredWeight &&\n                  Boolean(formik.errors.desiredWeight)\n                }\n                sx={{ width: '240px' }}\n              />\n              {formik.touched.desiredWeight && formik.errors.desiredWeight ? (\n                <FormHelperText\n                  error={\n                    formik.touched.desiredWeight &&\n                    Boolean(formik.errors.desiredWeight)\n                  }\n                  id=\"desiredWeight-helper-text\"\n                >\n                  {formik.errors.desiredWeight}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"desiredWeight-helper-text\">\n                  {' '}\n                </FormHelperText>\n              )}\n\n              <StyledInputLable\n                error={\n                  formik.touched.bloodType && Boolean(formik.errors.bloodType)\n                }\n                sx={{ mt: { xs: '12px', md: '20px' } }}\n                disableAnimation\n                shrink\n                htmlFor=\"bloodType\"\n              >\n                Blood Type*\n              </StyledInputLable>\n              <Input\n                readOnly\n                notched=\"true\"\n                id=\"bloodType\"\n                name=\"bloodType\"\n                value={formik.values.bloodType}\n                placeholder=\"Choose your blood type.\"\n                aria-describedby=\"bloodType-helper-text\"\n                error={\n                  formik.touched.bloodType && Boolean(formik.errors.bloodType)\n                }\n                sx={{ width: '240px' }}\n              />\n              <RadioGroup\n                notched=\"true\"\n                row\n                aria-labelledby=\"bloodType\"\n                name=\"bloodType\"\n                value={formik.values.bloodType}\n                onChange={formik.handleChange}\n                sx={{\n                  color: '#9B9FAA',\n                  '&.Mui-checked': {\n                    color: '#FC842D',\n                  },\n                }}\n              >\n                <MyFormControlLabel\n                  value=\"1\"\n                  control={<ColorRadioBtn />}\n                  label=\"1\"\n                />\n                <MyFormControlLabel\n                  value=\"2\"\n                  control={<ColorRadioBtn />}\n                  label=\"2\"\n                />\n                <MyFormControlLabel\n                  value=\"3\"\n                  control={<ColorRadioBtn disableRipple={Boolean(true)} />}\n                  label=\"3\"\n                />\n                <MyFormControlLabel\n                  value=\"4\"\n                  control={<ColorRadioBtn disableRipple={true} />}\n                  label=\"4\"\n                />\n              </RadioGroup>\n              {formik.touched.bloodType && formik.errors.bloodType ? (\n                <FormHelperText\n                  error={\n                    formik.touched.bloodType && Boolean(formik.errors.bloodType)\n                  }\n                  id=\"bloodType-helper-text\"\n                >\n                  {formik.errors.bloodType}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"bloodType-helper-text\"> </FormHelperText>\n              )}\n            </Box>\n          </Box>\n          <ColorButton\n            sx={{\n              m: {\n                xs: '20px auto 0 auto',\n                md: '40px auto 0 0px',\n                lg: '40px auto 0 323px',\n              },\n            }}\n            disabled={isValid ? false : true}\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={() =>\n              isLoggedIn\n                ? dispatch(dailyRateOperation({ id, data: formik.values }))\n                : handleCloseModal()\n            }\n          >\n            {isValid ? `Start losing weight` : `Fill in your data `}\n          </ColorButton>\n        </Box>\n      </Box>\n      {open && (\n        <ModalWindow\n          values={formik.values}\n          open={open}\n          onClose={handleCloseModal}\n          setOpen={setOpen}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default Home;\n","import Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport { Radio, InputLabel, FormControlLabel, Container } from '@mui/material';\nexport const ColorButton = styled(Button)(({ theme }) => ({\n  color: '#FFFFFF',\n  backgroundColor: '#FC842D',\n  display: 'block',\n  fontWeight: '700',\n  borderRadius: '30px',\n  width: '210px',\n  padding: '13px 25px',\n  textTransform: 'none',\n  '&:hover': {\n    backgroundColor: '#FFFFFF',\n    color: '#FC842D',\n    '&:disabled': {\n      backgroundColor: 'rgba(0, 0, 0, 0.12)',\n      border: '1px solid rgba(0, 0, 0, 0.12)',\n    },\n  },\n}));\nexport const ColorRadioBtn = styled(Radio)(({ theme }) => ({\n  color: '#E0E0E0',\n  '&.Mui-checked': {\n    color: '#FC842D',\n  },\n}));\nexport const StyledInputLable = styled(InputLabel)(({ theme }) => ({\n  color: '#9B9FAA',\n  fontFamily: 'Verdana',\n  fontWeight: 700,\n  fontSize: 14,\n  lineHeight: 1.14,\n}));\nexport const StyledFormControlLabel = styled(props => (\n  <FormControlLabel {...props} />\n))(({ theme, checked }) => ({\n  '.MuiFormControlLabel-label': checked && {\n    color: '#FC842D',\n  },\n}));\nexport const StyledContainer = styled(Container)`\n  margin-left: 0;\n  margin-right: 0;\n`;\n","import styled from 'styled-components';\nimport desktopMainBg from '../../assets/images/backroundImage/desktopMainBg-min.png';\nimport tabletMainBg from '../../assets/images/backroundImage/tabletMainBg-min.png';\nimport deskTopMainBg2x from '../../assets/images/backroundImage/desktopMainBg@2x-min.png';\nimport tabletMainBg2x from '../../assets/images/backroundImage/tabletMainBg@2x-min.png';\n\nexport const BgImg = styled.div`\n  background-repeat: no-repeat;\n  background-position: right bottom;\n  background-size: contain;\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: -1;\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 100vw;\n    height: 100vh;\n\n    background-image: url(${tabletMainBg});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${tabletMainBg2x});\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${desktopMainBg});\n\n    width: 100vw;\n    height: 100vh;\n    @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${deskTopMainBg2x});\n    }\n  }\n`;\n","import { BgImg } from 'components/Main/backGround.styled';\nimport Home from 'components/Main/Main';\nimport { StyledContainer } from 'components/Main/Main.styled';\n\nconst HomePage = () => {\n  return (\n    <StyledContainer>\n      <BgImg />\n      <Home />\n    </StyledContainer>\n  );\n};\n\nexport default HomePage;\n"],"names":["BoxStyled","styled","Box","values","open","onClose","setOpen","useState","data","setData","isLoggedIn","useSelector","selectAuthIsLoggedIn","fobidenPropucts","notAllowedProducts","loading","setLoading","searchQuery","setSearchQuery","dataFiltered","query","filter","d","toLowerCase","includes","trim","filterData","Object","keys","forEach","key","index","Number","useEffect","postDailyRate","then","res","finally","handleCloseBtn","theme","useTheme","mobile","useMediaQuery","breakpoints","down","Modal","hideBackdrop","IconButton","onClick","sx","position","top","right","display","xs","md","Clear","component","backgroundColor","width","hight","zIndex","left","ml","KeyboardReturn","Typography","id","variant","m","textAlign","fontSize","maxWidth","lineHeight","mb","LoadingSpiner","color","Math","ceil","dailyRate","Divider","Filter","height","padding","marginTop","map","product","ListItem","disableGutters","ListItemText","primary","arrayRandElement","Link","style","margin","textDecoration","to","schema","yup","shape","required","typeError","positive","min","integer","max","age","weight","desiredWeight","notOneOf","bloodType","MyFormControlLabel","props","radioGroup","useRadioGroup","checked","value","onSubmit","dispatch","useDispatch","userInitValues","selectAuthUserData","localInitValues","JSON","parse","localStorage","getItem","initialValues","formik","useFormik","validationSchema","setSubmitting","resetForm","setItem","stringify","validateOnBlur","isValid","isValidSync","handleCloseModal","selectAuthUserId","p","lg","mr","autoComplete","handleSubmit","gap","htmlFor","disableAnimation","shrink","error","touched","Boolean","errors","Input","notched","placeholder","onChange","handleChange","onBlur","handleBlur","FormHelperText","mt","readOnly","name","RadioGroup","row","control","label","disableRipple","disabled","type","dailyRateOperation","ColorButton","Button","fontWeight","borderRadius","textTransform","border","ColorRadioBtn","Radio","StyledInputLable","InputLabel","fontFamily","StyledFormControlLabel","StyledContainer","Container","BgImg","tabletMainBg","tabletMainBg2x","desktopMainBg","deskTopMainBg2x"],"sourceRoot":""}