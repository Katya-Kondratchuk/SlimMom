{"version":3,"file":"static/js/929.0f8d32d9.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Modal/ModalWindow.styled.jsx","services/api/base_api.js","components/Modal/ModalWindow.jsx","components/Main/Main.jsx","components/Main/Main.styled.js","pages/CalculatorPage/CalculatorPage.js"],"sourcesContent":["import { Container } from '@mui/material';\nimport React from 'react';\n\nconst ContainerLayout = ({ children }) => {\n  return (\n    <Container sx={{ px: { sm: '20px', md: '32px', lg: '16px' } }}>\n      {children}\n    </Container>\n  );\n};\n\nexport default ContainerLayout;\n","import { Box } from '@mui/material';\nimport styled from 'styled-components';\nexport const StyledItem = styled.li`\n  margin-bottom: 14px;\n  ::marker {\n    color: #9b9faa;\n    font-family: 'Verdana';\n    font-size: 14px;\n    line-height: 1.2;\n  }\n  /* @media screen and (max-width: 767px) {\n    \n  } */\n`;\nexport const BoxStyled = styled(Box)`\n  position: absolute;\n  top: 25%;\n  /* left: 50%; */\n  width: 100vw;\n  max-height: 638px;\n  padding: 40px 20px 119px;\n\n  @media screen and (min-width: 768px) {\n    width: 672px;\n    height: 572px;\n    padding: 64px 154px;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n  }\n  @media screen and (min-width: 1280px) {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n\n  background-color: white;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://slimmom-backend.goit.global';\n\n// Daily - rate\nexport const postDailyRate = async data => {\n  try {\n    const response = await axios.post('/daily-rate', data);\n    return response.data;\n  } catch (error) {\n    return {\n      error,\n    };\n  }\n};\n\n// Daily - rate with id\nexport const postDailyRateWithId = async (id, data) => {\n  try {\n    const response = await axios.post(`/daily-rate/${id}`, data);\n    return response.data;\n  } catch (error) {\n    return {\n      error,\n    };\n  }\n};\n\n// Products\nexport const getProducts = async value => {\n  try {\n    const response = await axios.get(`/product?search=${value}`);\n    return response.data;\n  } catch (error) {\n    return {\n      error,\n    };\n  }\n};\n","// import React from 'react';\nimport Modal from '@mui/material/Modal';\nimport { Divider, IconButton, ListItemText, Typography } from '@mui/material';\nimport { BoxStyled, StyledItem } from './ModalWindow.styled';\nimport { postDailyRate } from 'services/api/base_api';\nimport { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectAuthIsLoggedIn } from 'redux/auth/authSelectors';\nimport { ColorButton } from '../Main/Main.styled';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport KeyboardReturnIcon from '@mui/icons-material/KeyboardReturn';\nimport { Box } from '@mui/system';\n\nconst ModalWindow = ({ values, open, onClose, setOpen }) => {\n  const [data, setData] = useState({});\n  const isLoggedIn = useSelector(selectAuthIsLoggedIn);\n  \n  Object.keys(values).forEach((key, index) => {\n    if (typeof values[key] === 'string') values[key] = Number(values[key]);\n  });\n\n  useEffect(() => {\n    postDailyRate(values).then(res => setData(res));\n  }, [values]);\n\n  const handleCloseBtn = () => setOpen(!open);\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <BoxStyled>\n        <IconButton\n          onClick={handleCloseBtn}\n          sx={{\n            position: 'absolute',\n            top: 20,\n            right: 20,\n            display: { xs: 'none', md: 'block' },\n          }}\n        >\n          <ClearIcon />\n        </IconButton>\n        <IconButton\n          onClick={handleCloseBtn}\n          sx={{\n            position: 'absolute',\n            top: '-40px',\n            left: 20,\n            display: { xs: 'block', md: 'none' },\n          }}\n        >\n          <KeyboardReturnIcon />\n        </IconButton>\n\n        <Typography\n          id=\"modal-modal-title\"\n          variant=\"h2\"\n          component=\"span\"\n          sx={{\n            m: { xs: '0 auto 42px auto', md: '64px auto 20px auto' },\n            textAlign: { xs: 'start', md: 'center' },\n            fontSize: { xs: '18px', md: '36px' },\n            maxWidth: { xs: '280px', md: '508px' },\n          }}\n        >\n          Your recommended daily calorie intake is\n        </Typography>\n        <Typography id=\"modal-modal-title\" variant=\"h3\" component=\"p\">\n          {data.dailyRate} ккал.\n        </Typography>\n        <Divider\n          variant=\"middle\"\n          sx={{\n            maxWidth: '280px',\n            m: '0 auto',\n          }}\n        />\n        <Box\n          component=\"div\"\n          sx={{\n            maxWidth: '330px',\n            m: '0 auto',\n          }}\n        >\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h4\"\n            component=\"h4\"\n            sx={{\n              m: { xs: '20px auto', md: '12px auto 20px auto' },\n            }}\n          >\n            Foods you should not eat\n          </Typography>\n          <ol\n            type=\"1\"\n            style={{\n              minHeight: '112px',\n              marginBottom: '40px',\n              padding: '0',\n            }}\n          >\n            {data?.notAllowedProducts?.slice(0, 4).map(item => (\n              <StyledItem\n                component=\"li\"\n                disablePadding\n                key={uuidv4()}\n                style={{\n                  marginBotton: { xs: '14px' },\n                }}\n              >\n                <ListItemText\n                  primary={item}\n                  sx={{\n                    color: '#9B9FAA',\n                  }}\n                />\n              </StyledItem>\n            ))}\n          </ol>\n          {/* <List\n            component=\"ol\"\n            sx={{\n              minHeight: '112px',\n              mb: '40px',\n              p: '0',\n            }}\n          >\n            {data?.notAllowedProducts?.slice(0, 4).map(item => (\n              <ListItem\n                disablePadding\n                key={uuidv4()}\n                sx={{\n                  mb: { xs: '14px' },\n                }}\n              >\n                <ListItemText\n                  primary={item}\n                  sx={{\n                    color: '#9B9FAA',\n                  }}\n                />\n              </ListItem>\n            ))}\n          </List> */}\n        </Box>\n        <Link\n          component=\"button\"\n          style={{\n            margin: '0 auto',\n            textDecoration: 'none',\n          }}\n          to={isLoggedIn ? '/diary' : '/registration'}\n          onClick={onClose}\n          // underline=\"none\"\n        >\n          <ColorButton\n            sx={{\n              m: '0 auto',\n            }}\n          >\n            Start losing weight\n          </ColorButton>\n        </Link>\n      </BoxStyled>\n    </Modal>\n  );\n};\n\nexport default ModalWindow;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport {\n  ColorButton,\n  ColorRadioBtn,\n  StyledInputLable,\n  StyledFormControlLabel,\n} from './Main.styled.js';\n\nimport RadioGroup, { useRadioGroup } from '@mui/material/RadioGroup';\nimport {\n  FormControl,\n  FormHelperText,\n  Input,\n  Typography,\n  Box,\n} from '@mui/material';\nimport ModalWindow from 'components/Modal/ModalWindow.jsx';\nconst initialValues = {\n  height: '',\n  age: '',\n  weight: '',\n  desiredWeight: '',\n  bloodType: '',\n};\n\nconst schema = yup.object().shape({\n  height: yup\n    .number()\n    .required('Please write down your your height')\n    .typeError('Your height must be a number!')\n    .positive('Height mast be a positive number')\n    .min(130, 'You cant be that short!')\n    .max(220, 'Humans cant be that big!'),\n\n  age: yup\n    .number()\n    .typeError('Your age must be a number!')\n    .min(15, 'Aplication is not for children')\n    .max(80, 'Better check your weight with a doctor')\n    .required('Please write down your your age'),\n  weight: yup\n    .number()\n    .required('Please write down your current weight')\n    .typeError('Your current weight must be a number!')\n    .min(50, 'You are too light to use this app.')\n    .max(350, 'You cant be that big!')\n    .positive('Weight mast be a positive number'),\n\n  desiredWeight: yup\n    .number()\n    .typeError('Your desired weight must be a number!')\n    .min(45, 'You cant be that light.')\n    .max(100, 'You can do better!')\n    .notOneOf(\n      [yup.ref('weight'), null],\n      'Your desired weight and current weight are same!'\n    )\n    .required('Please write down your desired weight')\n    .positive('Desired weight mast be a positive'),\n\n  bloodType: yup.string().required('Please chose your blood type'),\n});\n\nfunction MyFormControlLabel(props) {\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n}\n\nMyFormControlLabel.propTypes = {\n  value: PropTypes.string,\n};\n\nconst Home = () => {\n  const [open, setOpen] = useState(false);\n  const formik = useFormik({\n    initialValues,\n    validationSchema: schema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(false);\n    },\n    validateOnBlur: true,\n  });\n  const isValid = schema.isValidSync(formik.values);\n  const handleCloseModal = () => {\n    setOpen(!open);\n  };\n  return (\n    <Box component=\"div\">\n      <Box\n        component=\"div\"\n        sx={{\n          textAlign: 'centr',\n          maxWidth: { lg: '608px', md: '518px', xs: '280px' },\n\n          m: {\n            xs: '32px auto 0 auto',\n            md: '100px auto 0 auto',\n            lg: '147px auto 0 0',\n          },\n        }}\n      >\n        <Typography\n          variant=\"h2\"\n          component=\"h1\"\n          sx={{\n            mb: { xs: '34px', md: '68px' },\n            textAlign: { xs: 'center', md: 'start' },\n            fontSize: { xs: '18px', md: '34px' },\n          }}\n        >\n          Calculate your daily calorie intake right now\n        </Typography>\n        <Box\n          component=\"form\"\n          sx={{\n            display: { md: 'flex' },\n            m: { xs: '0 auto', md: '0 auto 0 0' },\n            gap: '32px',\n            maxWidth: { md: '512px', xs: '240px' },\n          }}\n          autoComplete=\"off\"\n          onSubmit={formik.handleSubmit}\n        >\n          <div>\n            <FormControl variant=\"standard\" sx={{}}>\n              <StyledInputLable\n                htmlFor=\"height\"\n                disableAnimation\n                shrink\n                error={formik.touched.height && Boolean(formik.errors.height)}\n              >\n                Height*\n              </StyledInputLable>\n              <Input\n                notched=\"true\"\n                id=\"height\"\n                placeholder=\"Write down your height in sm.\"\n                value={formik.values.height}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.height && Boolean(formik.errors.height)}\n                sx={{ width: '242px' }}\n              />\n              {formik.touched.height && formik.errors.height ? (\n                <FormHelperText\n                  error={formik.touched.height && Boolean(formik.errors.height)}\n                  id=\"height-helper-text\"\n                >\n                  {formik.errors.height}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"height-helper-text\"> </FormHelperText>\n              )}\n            </FormControl>\n            <FormControl\n              variant=\"standard\"\n              sx={{ mt: { xs: '32px', md: '20px' } }}\n            >\n              <StyledInputLable\n                htmlFor=\"age\"\n                disableAnimation\n                shrink\n                error={formik.touched.age && Boolean(formik.errors.age)}\n              >\n                Age*\n              </StyledInputLable>\n              <Input\n                notched=\"true\"\n                id=\"age\"\n                value={formik.values.age}\n                placeholder=\"Write down your age.\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.age && Boolean(formik.errors.age)}\n                variant=\"standard\"\n                sx={{ width: '240px' }}\n              />\n              {formik.touched.age && formik.errors.age ? (\n                <FormHelperText\n                  error={formik.touched.age && Boolean(formik.errors.age)}\n                  id=\"age-helper-text\"\n                >\n                  {formik.errors.age}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"age-helper-text\"> </FormHelperText>\n              )}\n            </FormControl>\n            <FormControl\n              sx={{ mt: { xs: '32px', md: '20px' } }}\n              variant=\"standard\"\n            >\n              <StyledInputLable\n                error={formik.touched.weight && Boolean(formik.errors.weight)}\n                disableAnimation\n                shrink\n                htmlFor=\"weight\"\n              >\n                Current Weight*\n              </StyledInputLable>\n              <Input\n                notched=\"true\"\n                fullWidth\n                id=\"weight\"\n                name=\"weight\"\n                label=\"Current weight*\"\n                placeholder=\"Write down your weight in kg.\"\n                value={formik.values.weight}\n                aria-describedby=\"weight-helper-text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.weight && Boolean(formik.errors.weight)}\n                sx={{ width: '240px' }}\n              />\n              {formik.touched.weight && formik.errors.weight ? (\n                <FormHelperText\n                  error={formik.touched.weight && Boolean(formik.errors.weight)}\n                  id=\"weight-helper-text\"\n                >\n                  {formik.errors.weight}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"weight-helper-text\"> </FormHelperText>\n              )}\n            </FormControl>\n          </div>\n          <div>\n            <FormControl\n              sx={{ mt: { xs: '32px', md: '0' } }}\n              variant=\"standard\"\n            >\n              <StyledInputLable\n                error={\n                  formik.touched.desiredWeight &&\n                  Boolean(formik.errors.desiredWeight)\n                }\n                disableAnimation\n                shrink\n                htmlFor=\"desiredWeight\"\n              >\n                Desired Weight*\n              </StyledInputLable>\n              <Input\n                notched=\"true\"\n                fullWidth\n                id=\"desiredWeight\"\n                name=\"desiredWeight\"\n                label=\"Desired Weight*\"\n                placeholder=\"Your desired weight in kg.\"\n                value={formik.values.desiredWeight}\n                aria-describedby=\"desiredWeight-helper-text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                  formik.touched.desiredWeight &&\n                  Boolean(formik.errors.desiredWeight)\n                }\n                sx={{ width: '240px' }}\n              />\n              {formik.touched.desiredWeight && formik.errors.desiredWeight ? (\n                <FormHelperText\n                  error={\n                    formik.touched.desiredWeight &&\n                    Boolean(formik.errors.desiredWeight)\n                  }\n                  id=\"desiredWeight-helper-text\"\n                >\n                  {formik.errors.desiredWeight}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"desiredWeight-helper-text\">\n                  {' '}\n                </FormHelperText>\n              )}\n            </FormControl>\n            <FormControl\n              sx={{ mt: { xs: '32px', md: '20px' } }}\n              variant=\"standard\"\n            >\n              <StyledInputLable\n                error={\n                  formik.touched.bloodType && Boolean(formik.errors.bloodType)\n                }\n                disableAnimation\n                shrink\n                htmlFor=\"bloodType\"\n              >\n                Blood Type*\n              </StyledInputLable>\n              <Input\n                readOnly\n                notched=\"true\"\n                id=\"bloodType\"\n                name=\"bloodType\"\n                value={formik.values.bloodType}\n                placeholder=\"Choose your blood type.\"\n                aria-describedby=\"bloodType-helper-text\"\n                error={\n                  formik.touched.bloodType && Boolean(formik.errors.bloodType)\n                }\n                sx={{ width: '240px' }}\n              />\n              <RadioGroup\n                notched=\"true\"\n                row\n                aria-labelledby=\"bloodType\"\n                name=\"bloodType\"\n                value={formik.values.bloodType}\n                onChange={formik.handleChange}\n                sx={{\n                  color: '#9B9FAA',\n                  '&.Mui-checked': {\n                    color: '#FC842D',\n                  },\n                }}\n              >\n                <MyFormControlLabel\n                  value=\"1\"\n                  control={<ColorRadioBtn />}\n                  label=\"1\"\n                />\n                <MyFormControlLabel\n                  value=\"2\"\n                  control={<ColorRadioBtn />}\n                  label=\"2\"\n                />\n                <MyFormControlLabel\n                  value=\"3\"\n                  control={<ColorRadioBtn disableRipple={Boolean(true)} />}\n                  label=\"3\"\n                />\n                <MyFormControlLabel\n                  value=\"4\"\n                  control={<ColorRadioBtn disableRipple={true} />}\n                  label=\"4\"\n                />\n              </RadioGroup>\n              {formik.touched.bloodType && formik.errors.bloodType ? (\n                <FormHelperText\n                  error={\n                    formik.touched.bloodType && Boolean(formik.errors.bloodType)\n                  }\n                  id=\"bloodType-helper-text\"\n                >\n                  {formik.errors.bloodType}\n                </FormHelperText>\n              ) : (\n                <FormHelperText id=\"bloodType-helper-text\"></FormHelperText>\n              )}\n            </FormControl>\n          </div>\n        </Box>\n        <ColorButton\n          sx={{\n            m: {\n              xs: '40px auto 0 auto',\n              md: '60px auto 0 32px',\n              lg: '60px auto 0 323px',\n            },\n          }}\n          disabled={isValid ? false : true}\n          type=\"submit\"\n          variant=\"contained\"\n          onClick={handleCloseModal}\n        >\n          {isValid ? `Start losing weight` : `Fill in your data `}\n        </ColorButton>\n      </Box>\n\n      {open && (\n        <ModalWindow\n          values={formik.values}\n          open={open}\n          onClose={handleCloseModal}\n          setOpen={setOpen}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default Home;\n","import Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport { Radio, InputLabel, FormControlLabel, Container } from '@mui/material';\nexport const ColorButton = styled(Button)(({ theme }) => ({\n  color: '#FFFFFF',\n  backgroundColor: '#FC842D',\n  display: 'block',\n  fontWeight: '700',\n  borderRadius: '30px',\n  width: '210px',\n  padding: '13px 25px',\n  textTransform: 'none',\n  '&:hover': {\n    backgroundColor: '#FFFFFF',\n    color: '#FC842D',\n  },\n}));\nexport const ColorRadioBtn = styled(Radio)(({ theme }) => ({\n  color: '#E0E0E0',\n  '&.Mui-checked': {\n    color: '#FC842D',\n  },\n}));\nexport const StyledInputLable = styled(InputLabel)(({ theme }) => ({\n  color: '#9B9FAA',\n  fontFamily: 'Verdana',\n  fontWeight: 700,\n  fontSize: 14,\n  lineHeight: 1.14,\n}));\nexport const StyledFormControlLabel = styled(props => (\n  <FormControlLabel {...props} />\n))(({ theme, checked }) => ({\n  '.MuiFormControlLabel-label': checked && {\n    color: '#FC842D',\n  },\n}));\nexport const StyledContainer = styled(Container)`\n  margin-left: 0;\n  margin-right: 0;\n`;\n","import ContainerLayout from 'components/Container/Container';\nimport Home from 'components/Main/Main';\n\nconst CalculatorPage = () => {\n  return (\n    <ContainerLayout>\n      <Home />\n    </ContainerLayout>\n  );\n};\n\nexport default CalculatorPage;\n"],"names":["children","sx","px","sm","md","lg","StyledItem","styled","BoxStyled","Box","axios","postDailyRate","data","response","error","values","open","onClose","setOpen","useState","setData","isLoggedIn","useSelector","selectAuthIsLoggedIn","Object","keys","forEach","key","index","Number","useEffect","then","res","handleCloseBtn","Modal","IconButton","onClick","position","top","right","display","xs","Clear","left","KeyboardReturn","Typography","id","variant","component","m","textAlign","fontSize","maxWidth","dailyRate","Divider","type","style","minHeight","marginBottom","padding","notAllowedProducts","slice","map","item","disablePadding","marginBotton","ListItemText","primary","color","uuidv4","Link","margin","textDecoration","to","initialValues","height","age","weight","desiredWeight","bloodType","schema","yup","shape","required","typeError","positive","min","max","notOneOf","MyFormControlLabel","props","radioGroup","useRadioGroup","checked","value","formik","useFormik","validationSchema","onSubmit","setSubmitting","resetForm","validateOnBlur","isValid","isValidSync","handleCloseModal","mb","gap","autoComplete","handleSubmit","FormControl","htmlFor","disableAnimation","shrink","touched","Boolean","errors","Input","notched","placeholder","onChange","handleChange","onBlur","handleBlur","width","FormHelperText","mt","fullWidth","name","label","readOnly","RadioGroup","row","control","disableRipple","disabled","ColorButton","Button","theme","backgroundColor","fontWeight","borderRadius","textTransform","ColorRadioBtn","Radio","StyledInputLable","InputLabel","fontFamily","lineHeight","StyledFormControlLabel","StyledContainer","Container"],"sourceRoot":""}