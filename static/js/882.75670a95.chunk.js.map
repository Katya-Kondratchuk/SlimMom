{"version":3,"file":"static/js/882.75670a95.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Main/Main.styled.js","components/Modal/ModalWindow.styled.jsx","services/api/base_api.js","components/Modal/ModalWindow.jsx","components/Main/backgroundImage/BackGround.styled.js","components/Main/Main.jsx","pages/HomePage/HomePage.js"],"sourcesContent":["import { Container } from '@mui/material';\nimport React from 'react';\n\nconst ContainerLayout = ({ children }) => {\n  return (\n    <Container sx={{ px: { sm: '20px', md: '32px', lg: '16px' } }}>\n      {children}\n    </Container>\n  );\n};\n\nexport default ContainerLayout;\n","import Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport { Radio, InputLabel, FormControlLabel } from '@mui/material';\nexport const ColorButton = styled(Button)(({ theme }) => ({\n  color: '#FFFFFF',\n  backgroundColor: '#FC842D',\n  display: 'block',\n  borderRadius: '30px',\n  maxWidth: '210px',\n  marginTop: '60px',\n  marginLeft: '323px',\n  '&:hover': {\n    backgroundColor: '#FFFFFF',\n    color: '#FC842D',\n  },\n}));\nexport const ColorRadioBtn = styled(Radio)(({ theme }) => ({\n  color: '#E0E0E0',\n  '&.Mui-checked': {\n    color: '#FC842D',\n  },\n}));\nexport const StyledInputLable = styled(InputLabel)(({ theme }) => ({\n  color: '#9B9FAA',\n  fontWeight: 700,\n  fontSize: 14,\n  lineHeight: 1.14,\n}));\nexport const StyledFormControlLabel = styled(props => (\n  <FormControlLabel {...props} />\n))(({ theme, checked }) => ({\n  '.MuiFormControlLabel-label': checked && {\n    color: '#FC842D',\n  },\n}));\n","import { Box } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const BoxStyled = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 400;\n  background-color: white;\n  box-shadow: 24;\n  padding: 64px 154px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://slimmom-backend.goit.global';\n\n// Daily - rate\nexport const postDailyRate = async data => {\n  try {\n    const response = await axios.post('/daily-rate', data);\n    return response.data;\n  } catch (error) {\n    return {\n      error,\n    };\n  }\n};\n\n// Daily - rate with id\nexport const postDailyRateWithId = async (id, data) => {\n  try {\n    const response = await axios.post(`/daily-rate/${id}`, data);\n    return response.data;\n  } catch (error) {\n    return {\n      error,\n    };\n  }\n};\n\n// Products\nexport const getProducts = async value => {\n  try {\n    const response = await axios.get(`/product?search=${value}`);\n    return response.data;\n  } catch (error) {\n    return {\n      error,\n    };\n  }\n};\n","import React from 'react';\nimport Modal from '@mui/material/Modal';\nimport { List, ListItem, ListItemText, Typography } from '@mui/material';\nimport { BoxStyled } from './ModalWindow.styled';\nimport { postDailyRate } from 'services/api/base_api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectAuthIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst ModalWindow = ({ values, open, onClose }) => {\n  const [data, setData] = useState({});\n\n  const isLoggedIn = useSelector(selectAuthIsLoggedIn);\n  const a = Number(values.height);\n  const b = Number(values.age);\n  const c = Number(values.currentWeight);\n  const d = Number(values.desiredWeight);\n  const e = Number(values.bloodType);\n\n  useEffect(() => {\n    const value = {\n      height: a,\n      age: b,\n      weight: c,\n      desiredWeight: d,\n      bloodType: e,\n    };\n\n    postDailyRate(value).then(res => setData(res));\n  }, [a, b, c, d, e]);\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <BoxStyled>\n        <Typography id=\"modal-modal-title\" variant=\"h2\" component=\"span\">\n          Your recommended daily calorie intake is\n        </Typography>\n        <Typography id=\"modal-modal-title\" variant=\"h3\" component=\"p\">\n          {data.dailyRate}\n          {/* <Typography id=\"modal-modal-title\" variant=\"subtitle1\" component=\"p\"> */}\n          ккал\n          {/* </Typography> */}\n        </Typography>\n        <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"span\">\n          Foods you should not eat\n          <List>\n            {data?.notAllowedProducts?.slice(0, 4).map(item => (\n              <ListItem disablePadding key={uuidv4()}>\n                <ListItemText primary={item} />\n              </ListItem>\n            ))}\n          </List>\n        </Typography>\n        <Link to={isLoggedIn ? '/diary' : '/registration'} onClick={onClose}>\n          Start losing weight\n        </Link>\n      </BoxStyled>\n    </Modal>\n  );\n};\n\nexport default ModalWindow;\n","import styled from 'styled-components';\nimport desktopMainBg from '../../../assets/images/backroundImage/desktopMainBg-min.png';\nimport tabletMainBg from '../../../assets/images/backroundImage/tabletMainBg-min.png';\n\nexport const BgImg = styled.div`\n  @media screen and (min-width: 768px) {\n    position: fixed;\n    top: 0;\n    right: 0;\n    z-index: -1;\n\n    width: 100vw;\n    height: 100vh;\n\n    background-image: url(${tabletMainBg});\n    background-repeat: no-repeat;\n    background-position: right bottom;\n    background-size: contain;\n    /* @media screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(../images/header/main-768@2x.png);\n    } */\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${desktopMainBg});\n  }\n`;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport {\n  ColorButton,\n  ColorRadioBtn,\n  StyledInputLable,\n  StyledFormControlLabel,\n} from './Main.styled.js';\n\nimport RadioGroup, { useRadioGroup } from '@mui/material/RadioGroup';\nimport {\n  FormControl,\n  FormHelperText,\n  Input,\n  Typography,\n  Paper,\n  Box,\n} from '@mui/material';\nimport ModalWindow from 'components/Modal/ModalWindow.jsx';\nimport { BgImg } from './backgroundImage/BackGround.styled.js';\nconst initialValues = {\n  height: '',\n  age: '',\n  currentWeight: '',\n  desiredWeight: '',\n  bloodType: '',\n};\n\nconst schema = yup.object().shape({\n  height: yup\n    .number()\n    .required('Please write down your your height')\n    .typeError('Your height must be a number!')\n    .positive()\n    .min(130, 'You cant be that short!')\n    .max(220, 'Humans cant be that big!'),\n\n  age: yup\n    .number()\n    .typeError('Your age must be a number!')\n    .min(15, 'Aplication is not for children')\n    .max(80, 'Better check your weight with a doctor')\n    .required('Please write down your your age'),\n  currentWeight: yup\n    .number()\n    .required('Please write down your current weight')\n    .typeError('Your current weight must be a number!')\n    .min(50, 'You are too light to use this app.')\n    .max(350, 'You cant be that big!')\n    .positive(),\n\n  desiredWeight: yup\n    .number()\n    .typeError('Your desired weight must be a number!')\n    .min(45, 'You cant be that light.')\n    .max(100, 'You can do better!')\n    .notOneOf(\n      [yup.ref('currentWeight'), null],\n      'Your desired weight and current weight are same!'\n    )\n    // .lessThan(\n    //   [yup.ref('currentWeight'), null],\n    //   'Your desired weight have to be less then current weight!'\n    // )\n    .required('Please write down your desired weight'),\n  bloodType: yup.string().required('Please chose your blood type'),\n});\n\nfunction MyFormControlLabel(props) {\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n}\n\nMyFormControlLabel.propTypes = {\n  value: PropTypes.string,\n};\n\nconst Home = () => {\n  const [open, setOpen] = useState(false);\n  const formik = useFormik({\n    initialValues,\n    validationSchema: schema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(false);\n    },\n    validateOnBlur: true,\n  });\n  const isValid = schema.isValidSync(formik.values);\n  const handleCloseModal = () => {\n    setOpen(!open);\n  };\n  return (\n    <Paper elevation={0} sx={{ backgroundColor: 'transparent' }}>\n      <BgImg />\n      <Box\n        component=\"form\"\n        sx={{ width: '608px', mt: '147px' }}\n        autoComplete=\"off\"\n        onSubmit={formik.handleSubmit}\n      >\n        <Typography variant=\"mainTitle\" component=\"h1\" sx={{ mb: '41px' }}>\n          Calculate your daily calorie intake right now\n        </Typography>\n        <FormControl variant=\"standard\">\n          <StyledInputLable\n            htmlFor=\"height\"\n            disableAnimation\n            shrink\n            error={formik.touched.height && Boolean(formik.errors.height)}\n          >\n            Height*\n          </StyledInputLable>\n          <Input\n            notched=\"true\"\n            id=\"height\"\n            placeholder=\"Write down your height in sm.\"\n            value={formik.values.height}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.height && Boolean(formik.errors.height)}\n            sx={{ width: '240px', mt: '17px', mr: '32px' }}\n          />\n          {formik.touched.height && formik.errors.height ? (\n            <FormHelperText\n              error={formik.touched.height && Boolean(formik.errors.height)}\n              id=\"height-helper-text\"\n            >\n              {formik.errors.height}\n            </FormHelperText>\n          ) : (\n            <FormHelperText id=\"height-helper-text\"> </FormHelperText>\n          )}\n        </FormControl>\n        <FormControl variant=\"standard\">\n          <StyledInputLable\n            htmlFor=\"age\"\n            disableAnimation\n            shrink\n            error={formik.touched.age && Boolean(formik.errors.age)}\n          >\n            Age*\n          </StyledInputLable>\n          <Input\n            notched=\"true\"\n            id=\"age\"\n            value={formik.values.age}\n            placeholder=\"Write down your age.\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.age && Boolean(formik.errors.age)}\n            variant=\"standard\"\n            sx={{ width: '240px' }}\n          />\n          {formik.touched.age && formik.errors.age ? (\n            <FormHelperText\n              error={formik.touched.age && Boolean(formik.errors.age)}\n              id=\"age-helper-text\"\n            >\n              {formik.errors.age}\n            </FormHelperText>\n          ) : (\n            <FormHelperText id=\"age-helper-text\"> </FormHelperText>\n          )}\n        </FormControl>\n        <FormControl\n          sx={{ width: '240px', mt: '17px', mr: '32px' }}\n          variant=\"standard\"\n        >\n          <StyledInputLable\n            error={\n              formik.touched.currentWeight &&\n              Boolean(formik.errors.currentWeight)\n            }\n            disableAnimation\n            shrink\n            htmlFor=\"currentWeight\"\n          >\n            Current Weight*\n          </StyledInputLable>\n          <Input\n            notched=\"true\"\n            fullWidth\n            id=\"currentWeight\"\n            name=\"currentWeight\"\n            label=\"Current weight*\"\n            placeholder=\"Write down your weight in kg.\"\n            value={formik.values.currentWeight}\n            aria-describedby=\"currentWeight-helper-text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={\n              formik.touched.currentWeight &&\n              Boolean(formik.errors.currentWeight)\n            }\n          />\n          {formik.touched.currentWeight && formik.errors.currentWeight ? (\n            <FormHelperText\n              error={\n                formik.touched.currentWeight &&\n                Boolean(formik.errors.currentWeight)\n              }\n              id=\"currentWeight-helper-text\"\n            >\n              {formik.errors.currentWeight}\n            </FormHelperText>\n          ) : (\n            <FormHelperText id=\"currentWeight-helper-text\"> </FormHelperText>\n          )}\n        </FormControl>\n        <FormControl sx={{ width: '240px', mt: '17px' }} variant=\"standard\">\n          <StyledInputLable\n            error={formik.touched.bloodType && Boolean(formik.errors.bloodType)}\n            disableAnimation\n            shrink\n            htmlFor=\"bloodType\"\n          >\n            Blood Type*\n          </StyledInputLable>\n          <Input\n            disabled\n            notched=\"true\"\n            id=\"bloodType\"\n            name=\"bloodType\"\n            value={formik.values.bloodType}\n            placeholder=\"Choose your blood type.\"\n            aria-describedby=\"bloodType-helper-text\"\n            error={formik.touched.bloodType && Boolean(formik.errors.bloodType)}\n          />\n          <RadioGroup\n            notched=\"true\"\n            row\n            aria-labelledby=\"bloodType\"\n            name=\"bloodType\"\n            value={formik.values.bloodType}\n            onChange={formik.handleChange}\n            sx={{\n              color: '#9B9FAA',\n              '&.Mui-checked': {\n                color: '#FC842D',\n              },\n            }}\n          >\n            <MyFormControlLabel\n              value=\"1\"\n              control={<ColorRadioBtn />}\n              label=\"1\"\n            />\n            <MyFormControlLabel\n              value=\"2\"\n              control={<ColorRadioBtn />}\n              label=\"2\"\n            />\n            <MyFormControlLabel\n              value=\"3\"\n              control={<ColorRadioBtn />}\n              label=\"3\"\n            />\n            <MyFormControlLabel\n              value=\"4\"\n              control={<ColorRadioBtn />}\n              label=\"4\"\n            />\n          </RadioGroup>\n          {formik.touched.bloodType && formik.errors.bloodType ? (\n            <FormHelperText\n              error={\n                formik.touched.bloodType && Boolean(formik.errors.bloodType)\n              }\n              id=\"bloodType-helper-text\"\n            >\n              {formik.errors.bloodType}\n            </FormHelperText>\n          ) : (\n            <FormHelperText id=\"bloodType-helper-text\"></FormHelperText>\n          )}\n        </FormControl>\n        <FormControl sx={{ width: '240px' }} variant=\"standard\">\n          <StyledInputLable\n            error={\n              formik.touched.desiredWeight &&\n              Boolean(formik.errors.desiredWeight)\n            }\n            disableAnimation\n            shrink\n            htmlFor=\"desiredWeight\"\n          >\n            Desired Weight*\n          </StyledInputLable>\n          <Input\n            notched=\"true\"\n            fullWidth\n            id=\"desiredWeight\"\n            name=\"desiredWeight\"\n            label=\"Desired Weight*\"\n            placeholder=\"Your desired weight in kg.\"\n            value={formik.values.desiredWeight}\n            aria-describedby=\"desiredWeight-helper-text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={\n              formik.touched.desiredWeight &&\n              Boolean(formik.errors.desiredWeight)\n            }\n          />\n          {formik.touched.desiredWeight && formik.errors.desiredWeight ? (\n            <FormHelperText\n              error={\n                formik.touched.desiredWeight &&\n                Boolean(formik.errors.desiredWeight)\n              }\n              id=\"desiredWeight-helper-text\"\n            >\n              {formik.errors.desiredWeight}\n            </FormHelperText>\n          ) : (\n            <FormHelperText id=\"desiredWeight-helper-text\"></FormHelperText>\n          )}\n        </FormControl>\n      </Box>\n      <ColorButton\n        disabled={isValid ? false : true}\n        type=\"submit\"\n        variant=\"contained\"\n        onClick={handleCloseModal}\n      >\n        Start losing weight\n      </ColorButton>\n      {open && (\n        <ModalWindow\n          values={formik.values}\n          open={open}\n          onClose={handleCloseModal}\n        />\n      )}\n    </Paper>\n  );\n};\n\nexport default Home;\n","import ContainerLayout from 'components/Container/Container';\nimport Home from 'components/Main/Main';\n\nconst HomePage = () => {\n  return <ContainerLayout>{<Home />}</ContainerLayout>;\n};\n\nexport default HomePage;\n"],"names":["children","sx","px","sm","md","lg","ColorButton","styled","Button","theme","color","backgroundColor","display","borderRadius","maxWidth","marginTop","marginLeft","ColorRadioBtn","Radio","StyledInputLable","InputLabel","fontWeight","fontSize","lineHeight","StyledFormControlLabel","props","FormControlLabel","checked","BoxStyled","Box","axios","postDailyRate","data","response","error","values","open","onClose","useState","setData","isLoggedIn","useSelector","selectAuthIsLoggedIn","a","Number","height","b","age","c","currentWeight","d","desiredWeight","e","bloodType","useEffect","weight","then","res","Modal","Typography","id","variant","component","dailyRate","List","notAllowedProducts","slice","map","item","ListItem","disablePadding","ListItemText","primary","uuidv4","to","onClick","BgImg","tabletMainBg","desktopMainBg","initialValues","schema","yup","shape","required","typeError","positive","min","max","notOneOf","MyFormControlLabel","radioGroup","useRadioGroup","value","setOpen","formik","useFormik","validationSchema","onSubmit","setSubmitting","resetForm","validateOnBlur","isValid","isValidSync","handleCloseModal","Paper","elevation","width","mt","autoComplete","handleSubmit","mb","FormControl","htmlFor","disableAnimation","shrink","touched","Boolean","errors","Input","notched","placeholder","onChange","handleChange","onBlur","handleBlur","mr","FormHelperText","fullWidth","name","label","disabled","RadioGroup","row","control","type","Container"],"sourceRoot":""}