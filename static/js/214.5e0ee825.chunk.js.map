{"version":3,"file":"static/js/214.5e0ee825.chunk.js","mappings":"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","sources":["components/Main/Main.styled.js","components/Modal/ModalWindow.styled.jsx","services/api/base_api.js","components/Modal/ModalWindow.jsx","components/Main/Main.jsx","pages/HomePage/HomePage.js"],"sourcesContent":["import Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport { Radio, InputLabel, FormControlLabel } from '@mui/material';\nexport const ColorButton = styled(Button)(({ theme }) => ({\n  color: '#FFFFFF',\n  backgroundColor: '#FC842D',\n  chubby: true,\n\n  '&:hover': {\n    backgroundColor: '#FFFFFF',\n    color: '#FC842D',\n  },\n}));\nexport const ColorRadioBtn = styled(Radio)(({ theme }) => ({\n  color: '#E0E0E0',\n  '&.Mui-checked': {\n    color: '#FC842D',\n  },\n}));\nexport const StyledInputLable = styled(InputLabel)(({ theme }) => ({\n  color: '#9B9FAA',\n  fontWeight: 700,\n  fontSize: 14,\n  lineHeight: 1.14,\n}));\nexport const StyledFormControlLabel = styled(props => (\n  <FormControlLabel {...props} />\n))(({ theme, checked }) => ({\n  '.MuiFormControlLabel-label': checked && {\n    color: '#FC842D',\n  },\n}));\n","import { Box } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const BoxStyled = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 400;\n  background-color: white;\n  box-shadow: 24;\n  padding: 64px 154px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://slimmom-backend.goit.global';\n\n// Daily - rate\nexport const postDailyRate = async data => {\n  try {\n    const response = await axios.post('/daily-rate', data);\n    return response.data;\n  } catch (error) {\n    return {\n      error,\n    };\n  }\n};\n","import React from 'react';\nimport Modal from '@mui/material/Modal';\nimport { List, ListItem, ListItemText, Typography } from '@mui/material';\nimport { BoxStyled } from './ModalWindow.styled';\nimport { postDailyRate } from 'services/api/base_api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectAuthIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst ModalWindow = ({ values, open, onClose }) => {\n  const [data, setData] = useState({});\n\n  const isLoggedIn = useSelector(selectAuthIsLoggedIn);\n  const a = Number(values.height);\n  const b = Number(values.age);\n  const c = Number(values.currentWeight);\n  const d = Number(values.desiredWeight);\n  const e = Number(values.bloodType);\n\n  useEffect(() => {\n    const value = {\n      height: a,\n      age: b,\n      weight: c,\n      desiredWeight: d,\n      bloodType: e,\n    };\n\n    postDailyRate(value).then(res => setData(res));\n  }, [a, b, c, d, e]);\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <BoxStyled>\n        <Typography id=\"modal-modal-title\" variant=\"h2\" component=\"span\">\n          Your recommended daily calorie intake is\n        </Typography>\n        <Typography id=\"modal-modal-title\" variant=\"h3\" component=\"p\">\n          {data.dailyRate}\n          {/* <Typography id=\"modal-modal-title\" variant=\"subtitle1\" component=\"p\"> */}\n          ккал\n          {/* </Typography> */}\n        </Typography>\n        <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"span\">\n          Foods you should not eat\n          <List>\n            {data?.notAllowedProducts?.slice(0, 4).map(item => (\n              <ListItem disablePadding key={uuidv4()}>\n                <ListItemText primary={item} />\n              </ListItem>\n            ))}\n          </List>\n        </Typography>\n        <Link to={isLoggedIn ? '/diary' : '/registration'} onClick={onClose}>\n          Start losing weight\n        </Link>\n      </BoxStyled>\n    </Modal>\n  );\n};\n\nexport default ModalWindow;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport {\n  ColorButton,\n  ColorRadioBtn,\n  StyledInputLable,\n  StyledFormControlLabel,\n} from './Main.styled.js';\n\nimport RadioGroup, { useRadioGroup } from '@mui/material/RadioGroup';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {\n  FormControl,\n  FormHelperText,\n  Input,\n  Typography,\n  Paper,\n  Box,\n} from '@mui/material';\nimport ModalWindow from 'components/Modal/ModalWindow.jsx';\nconst initialValues = {\n  height: '',\n  age: '',\n  currentWeight: '',\n  desiredWeight: '',\n  bloodType: '',\n};\n\nconst schema = yup.object().shape({\n  height: yup\n    .number('Your height must be a number!')\n    .positive()\n    .min(130, 'You cant be that short!')\n    .max(220, 'Humans cant be that big!')\n    .required('Please write down your your height'),\n  age: yup\n    .number()\n    .min(15, 'Aplication is not for children')\n    .max(80, 'Better check your weight with a doctor')\n    .required('Please write down your your age'),\n  currentWeight: yup\n    .number()\n    .min(50, 'You are too light to use this app.')\n    .max(350, 'You cant be that big!')\n    .positive()\n    .required('Please write down your current weight'),\n  desiredWeight: yup\n    .number()\n    .min(45, 'You cant be that light.')\n    .max(100, 'You can do better!')\n    .notOneOf(\n      [yup.ref('currentWeight'), null],\n      'Your desired weight and current weight are same!'\n    )\n    // .lessThan(\n    //   [yup.ref('currentWeight'), null],\n    //   'Your desired weight have to be less then current weight!'\n    // )\n    .required('Please write down your desired weight'),\n  bloodType: yup.string().required('Please chose your blood type'),\n});\n\nconst theme = createTheme({\n  typography: {\n    mainTitle: {\n      fontSize: 34,\n      fontWeight: 700,\n    },\n    secondaTytitle: {\n      fontWeight: 500,\n    },\n  },\n});\n\nfunction MyFormControlLabel(props) {\n  const radioGroup = useRadioGroup();\n\n  let checked = false;\n\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n}\n\nMyFormControlLabel.propTypes = {\n  value: PropTypes.string,\n};\n\nconst Home = () => {\n  const [open, setOpen] = useState(false);\n  const formik = useFormik({\n    initialValues,\n    validationSchema: schema,\n    onSubmit: (values, { setSubmitting, resetForm }) => {\n      setSubmitting(false);\n    },\n    validateOnBlur: true,\n  });\n  const handleCloseModal = () => {\n    setOpen(!open);\n  };\n  //   const { height, age, currentWeight, desiredWeight, bloodType } =\n  //     formik.values;\n\n  return (\n    <Paper\n      elevation={0}\n      sx={{\n        '& > :not(style)': { m: 2, width: '608px' },\n      }}\n    >\n      <ThemeProvider theme={theme}>\n        <Typography variant=\"mainTitle\" component=\"h1\">\n          Calculate your daily calorie intake right now\n        </Typography>\n      </ThemeProvider>\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 2 },\n        }}\n        autoComplete=\"off\"\n        onSubmit={formik.handleSubmit}\n      >\n        <FormControl variant=\"standard\">\n          <StyledInputLable htmlFor=\"height\" disableAnimation shrink>\n            Height*\n          </StyledInputLable>\n          <Input\n            notched=\"true\"\n            id=\"height\"\n            placeholder=\"Write down your height in sm.\"\n            value={formik.values.height}\n            onChange={formik.handleChange}\n            error={formik.touched.height && Boolean(formik.errors.height)}\n            sx={{ mb: '20px', width: '240px' }}\n          />\n          <FormHelperText id=\"height\">\n            {formik.touched.height\n              ? formik.touched.height && formik.errors.height\n              : ' '}\n          </FormHelperText>\n        </FormControl>\n        <FormControl variant=\"standard\">\n          <StyledInputLable htmlFor=\"age\" disableAnimation shrink>\n            Age*\n          </StyledInputLable>\n          <Input\n            notched=\"true\"\n            id=\"age\"\n            value={formik.values.age}\n            onChange={formik.handleChange}\n            error={formik.touched.age && Boolean(formik.errors.age)}\n            variant=\"standard\"\n            sx={{ mb: '20px', width: '240px' }}\n          />\n          <FormHelperText id=\"age\">\n            {formik.touched.age ? formik.touched.age && formik.errors.age : ' '}\n          </FormHelperText>\n        </FormControl>\n        <FormControl sx={{ mb: 2, width: '240px' }} variant=\"standard\">\n          <StyledInputLable\n            error={\n              formik.touched.currentWeight &&\n              Boolean(formik.errors.currentWeight)\n            }\n            disableAnimation\n            shrink\n            htmlFor=\"currentWeight\"\n          >\n            Current Weight*\n          </StyledInputLable>\n          <Input\n            notched=\"true\"\n            fullWidth\n            id=\"currentWeight\"\n            name=\"currentWeight\"\n            label=\"Current weight*\"\n            placeholder=\"Write down your weight in kg.\"\n            value={formik.values.currentWeight}\n            aria-describedby=\"currentWeight-helper-text\"\n            onChange={formik.handleChange}\n            error={\n              formik.touched.currentWeight &&\n              Boolean(formik.errors.currentWeight)\n            }\n          />\n          {formik.touched.currentWeight && formik.errors.currentWeight ? (\n            <FormHelperText\n              error={\n                formik.touched.currentWeight &&\n                Boolean(formik.errors.currentWeight)\n              }\n              id=\"currentWeight-helper-text\"\n            >\n              {formik.errors.currentWeight}\n            </FormHelperText>\n          ) : (\n            <FormHelperText id=\"currentWeight-helper-text\"> </FormHelperText>\n          )}\n        </FormControl>\n        <FormControl sx={{ mb: 2, width: '240px' }} variant=\"standard\">\n          <StyledInputLable\n            error={formik.touched.bloodType && Boolean(formik.errors.bloodType)}\n            disableAnimation\n            shrink\n            htmlFor=\"bloodType\"\n          >\n            Blood Type*\n          </StyledInputLable>\n          <Input\n            disabled\n            notched=\"true\"\n            id=\"bloodType\"\n            name=\"bloodType\"\n            placeholder=\"Choose your blood type.\"\n            // defaultValue={formik.values.bloodType}\n            aria-describedby=\"bloodType-helper-text\"\n            error={formik.touched.bloodType && Boolean(formik.errors.bloodType)}\n          />\n          <RadioGroup\n            notched=\"true\"\n            row\n            aria-labelledby=\"bloodType\"\n            name=\"bloodType\"\n            value={formik.values.bloodType}\n            onChange={formik.handleChange}\n            sx={{\n              color: '#9B9FAA',\n              '&.Mui-checked': {\n                color: '#FC842D',\n              },\n            }}\n          >\n            <MyFormControlLabel\n              value=\"1\"\n              control={<ColorRadioBtn />}\n              label=\"1\"\n            />\n            <MyFormControlLabel\n              value=\"2\"\n              control={<ColorRadioBtn />}\n              label=\"2\"\n            />\n            <MyFormControlLabel\n              value=\"3\"\n              control={<ColorRadioBtn />}\n              label=\"3\"\n            />\n            <MyFormControlLabel\n              value=\"4\"\n              control={<ColorRadioBtn />}\n              label=\"4\"\n            />\n          </RadioGroup>\n          {formik.touched.bloodType && formik.errors.bloodType ? (\n            <FormHelperText\n              error={\n                formik.touched.bloodType && Boolean(formik.errors.bloodType)\n              }\n              id=\"bloodType-helper-text\"\n            >\n              {formik.errors.bloodType}\n            </FormHelperText>\n          ) : (\n            <FormHelperText id=\"bloodType-helper-text\"></FormHelperText>\n          )}\n          <FormControl sx={{ mb: 2, width: '240px' }} variant=\"standard\">\n            <StyledInputLable\n              error={\n                formik.touched.desiredWeight &&\n                Boolean(formik.errors.desiredWeight)\n              }\n              disableAnimation\n              shrink\n              htmlFor=\"desiredWeight\"\n            >\n              Desired Weight*\n            </StyledInputLable>\n            <Input\n              notched=\"true\"\n              fullWidth\n              id=\"desiredWeight\"\n              name=\"desiredWeight\"\n              label=\"Desired Weight*\"\n              placeholder=\"Your desired weight in kg.\"\n              value={formik.values.desiredWeight}\n              aria-describedby=\"desiredWeight-helper-text\"\n              onChange={formik.handleChange}\n              error={\n                formik.touched.desiredWeight &&\n                Boolean(formik.errors.desiredWeight)\n              }\n            />\n            {formik.touched.desiredWeight && formik.errors.desiredWeight ? (\n              <FormHelperText\n                error={\n                  formik.touched.desiredWeight &&\n                  Boolean(formik.errors.desiredWeight)\n                }\n                id=\"desiredWeight-helper-text\"\n              >\n                {formik.errors.desiredWeight}\n              </FormHelperText>\n            ) : (\n              <FormHelperText id=\"desiredWeight-helper-text\"></FormHelperText>\n            )}\n          </FormControl>\n        </FormControl>\n        <ThemeProvider theme={theme}>\n          <ColorButton\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={handleCloseModal}\n            sx={{ display: 'block', borderRadius: '30px' }}\n          >\n            Start losing weight\n          </ColorButton>\n        </ThemeProvider>\n      </Box>\n      {open && (\n        <ModalWindow\n          values={formik.values}\n          open={open}\n          onClose={handleCloseModal}\n        />\n      )}\n    </Paper>\n  );\n};\n\nexport default Home;\n","import Home from 'components/Main/Main';\n\nconst HomePage = () => {\n  return <Home />;\n};\n\nexport default HomePage;\n"],"names":["ColorButton","styled","Button","theme","color","backgroundColor","chubby","ColorRadioBtn","Radio","StyledInputLable","InputLabel","fontWeight","fontSize","lineHeight","StyledFormControlLabel","props","FormControlLabel","checked","BoxStyled","Box","axios","postDailyRate","data","response","error","values","open","onClose","useState","setData","isLoggedIn","useSelector","selectAuthIsLoggedIn","a","Number","height","b","age","c","currentWeight","d","desiredWeight","e","bloodType","useEffect","weight","then","res","Modal","Typography","id","variant","component","dailyRate","List","notAllowedProducts","slice","map","item","ListItem","disablePadding","ListItemText","primary","uuidv4","to","onClick","initialValues","schema","yup","shape","positive","min","max","required","notOneOf","createTheme","typography","mainTitle","secondaTytitle","MyFormControlLabel","radioGroup","useRadioGroup","value","setOpen","formik","useFormik","validationSchema","onSubmit","setSubmitting","resetForm","validateOnBlur","handleCloseModal","Paper","elevation","sx","m","width","ThemeProvider","autoComplete","handleSubmit","FormControl","htmlFor","disableAnimation","shrink","Input","notched","placeholder","onChange","handleChange","touched","Boolean","errors","mb","FormHelperText","fullWidth","name","label","disabled","RadioGroup","row","control","type","display","borderRadius"],"sourceRoot":""}